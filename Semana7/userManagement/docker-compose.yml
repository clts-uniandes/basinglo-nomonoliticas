version: '3.9'

services:
  users:
    build: .
    ports:
      - "8001:8000"
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db_users
      - DB_PORT=5432
      - DB_NAME=users
      - PYTHONUNBUFFERED=1
      - BROKER_URL=pulsar://broker_pulsar:6650
      - API_URL=http://broker_pulsar:8080
      - PULSAR_TOKEN=putatokenhere
      - PULSAR_TENANT=public
      - PULSAR_NAMESPACE=default
      - AUTH_COMMAND_TOPIC=register-credential-topic
      - AUTH_COMMAND_SUB_NAME=register-credential-sub
      - USER_EVENT_TOPIC=personal-info-created-topic
      - USERS_EVENT_SUB_NAME=personal-info-created-sub  # not essential
    networks:
      - user_net
    depends_on:
      broker_pulsar:
        condition: service_healthy
      db_users:
        condition: service_started
  db_users:
    image: postgres:12.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users
    networks:
      - user_net
    ports:
      - 5433:5432
    volumes:
      - users_postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
  broker_pulsar:
    image: apachepulsar/pulsar:3.2.0
    networks:
      - user_net
    restart: unless-stopped
    ports:
      - "6650:6650"
      - "8080:8080"
    command: ["bin/pulsar", "standalone"]
    volumes:
      - mypulsar:/pulsar/data"
    healthcheck:
      test: curl --fail http://localhost:8080/admin/v2/brokers/health || exit 1
      interval: 10s
      timeout: 30s
      retries: 2
      start_period: 10s

networks:
  user_net:
    driver: bridge

volumes:
  mypulsar:
  users_postgres:
