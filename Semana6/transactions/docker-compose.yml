version: '3.9'

services:

  broker_pulsar:
    image: apachepulsar/pulsar:3.2.0
    networks:
      - pulsar
    restart: on-failure
    ports:
      - "6650:6650"
      - "8080:8080"
    command: ["bin/pulsar", "standalone"]

  transactions:
    build: ./transactionManagement
    env_file:
      - ./transactionManagement/.env
    ports:
      - "3002:8000"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - transaction_net
      - pulsar      
    depends_on:
      db_transactions:
        condition: service_healthy
    environment:
      - BROKER_HOST=broker_pulsar
      - TOPIC=topic_transaction_properties
      - TOPIC_CONSUMER=topic_transaction_consumer
      - ENABLE=True
      - TOPIC_SAGA=topic_transaction_saga
      - TOPIC_SAGA_RESPONSE=topic_transaction_saga_response
      - TRANS_COMMAND_TOPIC=publish-transaction-result-topic
      - TRANS_COMMAND_SUB_NAME=transaction-sub-comandos
      - TRANS_EVENT_TOPIC=topic_transaction_saga
      - TRANS_EVENT_SUB_NAME=topic_transaction_saga_response
      - TRANS_COMMAND_SUB_NAME=transaction-sub-comandos_2
      - SAGA_COMMAND_SUB_NAME=transaction-sub-comandos-saga
      - PULSAR_TENANT=public
      - PULSAR_NAMESPACE=default


  db_transactions:
    image: postgres:12.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transactions 
    networks:
      - transaction_net
    ports:
      - 5435:5432
    volumes:
      - transactions_postgres_temp:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5

networks:
  transaction_net:
    driver: bridge
  pulsar:
    driver: bridge

volumes:
  transactions_postgres_temp:
