version: '3.9'

services:

  users:
    build: ./userManagement
    env_file:
      - ./userManagement/.env
    ports:
      - "3000:8000"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - user_net
    depends_on:
      db_users:
        condition: service_healthy

  db_users:
    image: postgres:12.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users
    networks:
      - user_net
    ports:
      - 5433:5432
    volumes:
      - postgres_temp:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5

  properties:
    build: ./propertiesManagement
    env_file:
      - ./propertiesManagement/.env
    ports:
      - "3001:8000"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - property_net
    depends_on:
      db_properties:
        condition: service_healthy

  db_properties:
    image: postgres:12.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=properties
    networks:
      - property_net
    ports:
      - 5434:5432
    volumes:
      - postgres_temp:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5

networks:
  user_net:
    driver: bridge
  property_net:
    driver: bridge

volumes:
  postgres_temp:
